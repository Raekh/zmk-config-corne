/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    tapping-term-ms = <165>;
    require-prior-idle-ms = <125>;
    quick-tap-ms = <125>;
    flavor = "tap-preferred";
};

&lt { quick-tap-ms = <175>; };

/ {
    macros {
        u_cedilla: unicode {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RS(U)) &kp E &kp NUMBER_7 &kp RETURN>;
            label = "UNICODE";
        };

        u_e_acute: unicode_e_acute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RS(U)) &kp E &kp N9 &kp RETURN>;
            label = "UNICODE_E_ACUTE";
        };

        u_e_grave: unicode_e_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RS(U)) &kp E &kp N8 &kp RETURN>;
            label = "UNICODE_E_GRAVE";
        };

        u_e_circum: u_e_circum {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RS(U)) &kp E &kp A &kp RETURN>;
            label = "U_E_CIRCUM";
            wait-ms = <0>;
        };

        u_e_trema: u_e_trema {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RS(U)) &kp E &kp B &kp RETURN>;
            label = "U_E_TREMA";
        };

        u_o_circum: u_o_circum {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RS(U)) &kp F &kp N4 &kp RETURN>;
            label = "U_O_CIRCUM";
        };

        u_i_circum: u_i_circum {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RS(U)) &kp E &kp E &kp RETURN>;
            label = "U_I_CIRCUM";
        };

        u_i_trema: u_i_trema {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RS(U)) &kp E &kp F &kp RETURN>;
            label = "U_I_TREMA";
        };

        u_a_grave: u_a_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RS(U)) &kp E &kp N0 &kp RETURN>;
            label = "U_A_GRAVE";
        };

        u_u_grave: u_u_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RS(U)) &kp F &kp N9 &kp RETURN>;
            label = "U_U_GRAVE";
            wait-ms = <0>;
        };

        u_u_circum: u_u_circum {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RS(U)) &kp F &kp B &kp RETURN>;
            label = "U_U_CIRCUM";
        };

        u_a_circum: u_a_circum {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RS(U)) &kp E &kp N2 &kp RETURN>;
            label = "U_A_CIRCUM";
            wait-ms = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&trans  &kp SEMICOLON   &kp COMMA           &kp PERIOD      &kp P             &kp Y           &kp F        &kp G              &kp C            &kp R                &kp L            &trans
&trans  &mt LEFT_WIN A  &mt LEFT_CONTROL O  &mt LEFT_ALT E  &mt LEFT_SHIFT U  &kp I           &kp D        &mt RIGHT_SHIFT H  &mt RIGHT_ALT T  &mt RIGHT_CONTROL N  &mt RIGHT_WIN S  &trans
&trans  &kp SQT         &kp Q               &kp J           &kp K             &kp X           &kp B        &kp M              &kp W            &kp V                &kp Z            &trans
                                            &kp TAB         &lt 1 BACKSPACE   &lt 2 DELETE    &lt 5 ENTER  &lt 3 SPACE        &kp ESCAPE
            >;
        };

        Symbols {
            display-name = "Symbols";
            bindings = <
&trans  &kp LS(PLUS)  &kp LBKT      &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp LS(AMPS)    &kp EQUAL     &kp LS(RPAR)    &kp LS(RBRC)  &kp RIGHT_BRACKET  &kp LS(STAR)  &trans
&trans  &kp N1        &kp N2        &kp N3          &lt 2 NUMBER_4        &kp N5          &kp N6        &lt 2 NUMBER_7  &kp N8        &kp N9             &kp N0        &trans
&trans  &kp LS(PIPE)  &kp LS(DLLR)  &trans          &trans                &trans          &kp LS(EXCL)  &kp BSLH        &kp MINUS     &kp FSLH           &kp LS(AT)    &trans
                                    &trans          &trans                &trans          &kp ENTER     &kp SPACE       &kp ESCAPE
            >;
        };

        Symbols_Alt {
            display-name = "Symb. 2";
            bindings = <
&trans  &trans     &trans         &trans  &trans  &trans    &trans         &trans         &trans         &trans         &trans         &trans
&trans  &trans     &trans         &trans  &trans  &trans    &trans         &trans         &trans         &trans         &trans         &trans
&trans  &kp GRAVE  &kp LS(TILDE)  &trans  &trans  &trans    &kp LS(PRCNT)  &kp LS(POUND)  &kp LS(UNDER)  &kp LS(QMARK)  &kp LS(CARET)  &trans
                                  &trans  &trans  &trans    &trans         &trans         &trans
            >;
        };

        Media {
            display-name = "Media";
            bindings = <
&trans  &kp F1    &kp F2        &kp F3             &kp F4           &kp F5                  &kp F6     &kp F7      &kp F8            &kp F9      &kp F10  &trans
&trans  &kp HOME  &kp K_MUTE    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_BRIGHTNESS_INC    &kp PG_UP  &kp K_PREV  &kp K_PLAY_PAUSE  &kp K_NEXT  &kp F11  &trans
&trans  &kp END   &kp CAPSLOCK  &kp LEFT           &kp RIGHT        &kp C_BRIGHTNESS_DEC    &kp PG_DN  &kp UP      &kp DOWN          &kp INSERT  &kp F12  &trans
                                &tog 6             &lt 4 BACKSPACE  &trans                  &trans     &trans      &trans
            >;
        };

        Bluetooth {
            display-name = "BT";
            bindings = <
&trans  &trans        &trans        &trans        &trans        &trans          &out OUT_USB  &trans  &trans  &trans  &bt BT_CLR  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &out OUT_TOG  &trans  &trans  &trans  &trans      &trans
&trans  &trans        &sys_reset    &bt BT_PRV    &bt BT_NXT    &trans          &out OUT_BLE  &trans  &trans  &trans  &trans      &trans
                                    &trans        &trans        &trans          &trans        &trans  &trans
            >;
        };

        Unicode_Linux {
            display-name = "Unicode (L)";
            bindings = <
&trans  &trans       &trans       &u_e_circum  &trans       &trans         &trans  &trans  &u_cedilla  &trans  &trans  &trans
&trans  &u_a_circum  &u_o_circum  &u_e_acute   &u_u_circum  &u_i_circum    &trans  &trans  &trans      &trans  &trans  &trans
&trans  &u_a_grave   &u_e_trema   &u_e_grave   &u_u_grave   &u_i_trema     &trans  &trans  &trans      &trans  &trans  &trans
                                  &trans       &trans       &trans         &trans  &trans  &trans
            >;
        };

        Mouse {
            bindings = <
&trans  &trans  &trans          &mmv MOVE_UP    &trans           &trans    &trans  &trans          &trans           &trans    &trans  &trans
&trans  &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans    &trans  &mkp MB1        &mkp MB2         &mkp MB3  &trans  &trans
&trans  &trans  &mkp MB4        &msc SCRL_DOWN  &msc SCRL_UP     &trans    &trans  &msc SCRL_LEFT  &msc SCRL_RIGHT  &mkp MB5  &trans  &trans
                                &trans          &trans           &trans    &trans  &lt 3 SPACE     &trans
            >;
        };
    };
};
